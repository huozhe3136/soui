import("//build_overrides/common.gni")
 

static_library("Scintilla") {
  configs += [ "//build/config:precompiled_headers" ]

  sources = [
            "include/ILexer.h",
            "include/Platform.h",
            "include/Sci_Position.h", 
            "include/SciLexer.h",
            "include/Scintilla.h",
            "include/ScintillaWidget.h",
            "lexlib/Accessor.h",
            "lexlib/CharacterCategory.h",
            "lexlib/CharacterSet.h",
            "lexlib/LexAccessor.h",
            "lexlib/LexerBase.h",
            "lexlib/LexerModule.h",
            "lexlib/LexerNoExceptions.h",
            "lexlib/LexerSimple.h",
            "lexlib/OptionSet.h",
            "lexlib/PropSetSimple.h",
            "lexlib/SparseState.h",
            "lexlib/StyleContext.h",
            "lexlib/SubStyles.h",
            "lexlib/WordList.h",
            "src/AutoComplete.h",
            "src/CallTip.h",
            "src/CaseConvert.h",
            "src/CaseFolder.h",
            "src/Catalogue.h",
            "src/CellBuffer.h",
            "src/CharClassify.h",
            "src/ContractionState.h",
            "src/Decoration.h",
            "src/Document.h",
            "src/EditModel.h",
            "src/Editor.h",
            "src/EditView.h",
            "src/ExternalLexer.h",
            "src/FontQuality.h",
            "src/Indicator.h",
            "src/KeyMap.h",
            "src/LineMarker.h",
            "src/Partitioning.h",
            "src/PerLine.h",
            "src/Position.h",
            "src/PositionCache.h",
            "src/RESearch.h",
            "src/RunStyles.h",
            "src/ScintillaBase.h",
            "src/Selection.h",
            "src/SparseVector.h",
            "src/SplitVector.h",
            "src/Style.h",
            "src/UnicodeFromUTF8.h",
            "src/UniConversion.h",
            "src/UniqueString.h",
            "src/ViewStyle.h",
            "src/XPM.h",
            "include/ILexer.h",
            "include/Scintilla.h",
            "include/SciLexer.h",
            "lexlib/WordList.h",
            "lexlib/LexAccessor.h",
            "lexlib/Accessor.h",
            "lexlib/StringCopy.h",
            "lexlib/StyleContext.h",
            "lexlib/CharacterSet.h",
            "lexlib/LexerModule.h",
            "include/Platform.h",

            "lexers/LexHTML.cxx",
            "lexlib/Accessor.cxx",
            "lexlib/CharacterCategory.cxx",
            "lexlib/CharacterSet.cxx",
            "lexlib/LexerBase.cxx",
            "lexlib/LexerModule.cxx",
            "lexlib/LexerNoExceptions.cxx",
            "lexlib/LexerSimple.cxx",
            "lexlib/PropSetSimple.cxx",
            "lexlib/StyleContext.cxx",
            "lexlib/WordList.cxx",
            "src/AutoComplete.cxx",
            "src/CallTip.cxx",
            "src/CaseConvert.cxx",
            "src/CaseFolder.cxx",
            "src/Catalogue.cxx",
            "src/CellBuffer.cxx",
            "src/CharClassify.cxx",
            "src/ContractionState.cxx",
            "src/Decoration.cxx",
            "src/Document.cxx",
            "src/EditModel.cxx", 
            "src/Editor.cxx",
            "src/ExternalLexer.cxx",
            "src/EditView.cxx", 
            "src/Indicator.cxx",
            "src/KeyMap.cxx",
            "src/LineMarker.cxx",
            "src/MarginView.cxx",
            "src/PerLine.cxx",
            "src/PositionCache.cxx",
            "src/RESearch.cxx",
            "src/RunStyles.cxx",
            "src/ScintillaBase.cxx",
            "src/Selection.cxx",
            "src/Style.cxx",
            "src/UniConversion.cxx",
            "src/ViewStyle.cxx",
            "src/XPM.cxx",
            "win32/PlatWin.cxx",
            "win32/ScintillaWin.cxx",
            "win32/HanjaDic.cxx", 

  ]

  include_dirs = [
    ".",
    "./src",
    "./include",
    "./lexlib",
  ] 

  libs =[
    "imm32.lib",
  ]

  deps = [ 
    "../../utilities", 
  ]

  if (is_win) {
    cflags = [
      #"/W3",  # Warning level 3.
      "/wd4530",
    ]
  }

  defines = ["_CRT_SECURE_NO_WARNINGS","SCI_LEXER","STATIC_BUILD"] 

} 

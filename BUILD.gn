import("//build_overrides/common.gni")

declare_args() {
}
 


 
action("preBuild_SMenuBarTest_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_SMenuBarTest_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/SMenuBarTest/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}
  


action("preBuild_setupdll_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_setupdll_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/setupdll/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}
  

action("preBuild_Emoji_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_Emoji_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/Emoji/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}

action("preBuild_MultiLangs_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_MultiLangs_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/MultiLangs/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}



action("preBuild_TXMgr_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_TXMgr_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/TXMgr/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}


action("preBuild_UiEditor_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_UiEditor_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/UiEditor/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}


action("preBuild_BesLyric_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_BesLyric_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/BesLyric/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}



action("preBuild_BaoFeng_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_BaoFeng_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/BaoFeng/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}

action("preBuild_QQMain_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_QQMain_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/QQMain/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}


action("preBuild_TIMDemo_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_TIMDemo_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/TIMDemo/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}


action("preBuild_SouiEditor_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_SouiEditor_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/SouiEditor/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}


action("preBuild_SLogViewer_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_SLogViewer_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/SLogViewer/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}




action("preBuild_360_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_360_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/360/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}

action("preBuild_360Preview_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_360Preview_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/360Preview/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}


action("preBuild_demo_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_demo_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/demo/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}


action("preBuild_mclistview_demo_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_mclistview_demo_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/mclistview_demo/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}

action("preBuild_PCManager_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_PCManager_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/PCManager/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}

action("preBuild_QQLogin_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_QQLogin_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/QQLogin/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}

action("preBuild_SoTool_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_SoTool_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/SoTool/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}

action("preBuild_souispy_resource") {
  script  = "//build/gn_run_binary.py"
  inputs  = [ "//uiresbuilder.exe" ]
  outputs = [ "$target_gen_dir/preBuild_souispy_resource.out" ]

  # The script takes as arguments the binary to run, and then the arguments
  # to pass it.
  args = [
          rebase_path("//uiresbuilder.exe", root_build_dir),
          "-w src/demos/souispy/",
          "-i uires/uires.idx",
          "-p uires",
          "-r res/soui_res.rc2",
          "-h res/R.h",
          "idtable"
         ] 
}
 

group("gen_demo_resource") {
  deps = [":preBuild_360_resource",
          ":preBuild_360Preview_resource",
          ":preBuild_demo_resource",
          ":preBuild_mclistview_demo_resource",
          ":preBuild_PCManager_resource",
          ":preBuild_QQLogin_resource",
          ":preBuild_SoTool_resource",
          ":preBuild_souispy_resource",
          ":preBuild_QQMain_resource",
          ":preBuild_UiEditor_resource",
          ":preBuild_BaoFeng_resource",     
          ":preBuild_BesLyric_resource",  
          ":preBuild_Emoji_resource",   
         ]  
}

action("pack_app_dynamic_files") {
  script = "//package.py"
  outputs = [ "$target_gen_dir/pack_app_dynamic_files.out" ]
  args = [ rebase_path("//package.py", root_build_dir)]
}


action("pack_app_static_files") {
  script = "//package_static.py"
  outputs = [ "$target_gen_dir/pack_app_static_files.out" ]
  args = [ rebase_path("//package_static.py", root_build_dir)]
}

group("post_build") {
  deps = [":pack_app_dynamic_files"]  
}

group("post_build_static") {
  deps = [":pack_app_static_files"]  
}

group("All") {
  deps = [
          ":gen_demo_resource",
          "//src:App",   
         ]   
}
 
